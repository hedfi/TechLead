{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/user.service\";\nimport * as i3 from \"../../../core/services/notification.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../shared/components/error-message/error-message.component\";\nimport * as i6 from \"../../../shared/components/loading-spinner/loading-spinner.component\";\nimport * as i7 from \"../../../shared/components/notification-toast/notification-toast.component\";\nfunction UserProfileComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"app-loading-spinner\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", \"medium\");\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r2.getErrorMessage(ctx_r2.profileForm, \"name\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r3.getErrorMessage(ctx_r3.profileForm, \"email\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_loading_spinner_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-spinner\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"size\", \"small\")(\"color\", \"#ffffff\");\n  }\n}\nfunction UserProfileComponent_div_4_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Update Profile\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r6.getErrorMessage(ctx_r6.passwordForm, \"password\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r7.getErrorMessage(ctx_r7.passwordForm, \"confirmPassword\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_loading_spinner_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-spinner\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"size\", \"small\")(\"color\", \"#ffffff\");\n  }\n}\nfunction UserProfileComponent_div_4_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Change Password\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"invalid\": a0\n  };\n};\nfunction UserProfileComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"section\", 7)(2, \"h2\");\n    i0.ɵɵtext(3, \"Personal Information\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_div_4_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateProfile());\n    });\n    i0.ɵɵelementStart(5, \"div\", 9)(6, \"label\", 10);\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵtemplate(9, UserProfileComponent_div_4_app_error_message_9_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 13);\n    i0.ɵɵtext(12, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 14);\n    i0.ɵɵtemplate(14, UserProfileComponent_div_4_app_error_message_14_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 15)(16, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_div_4_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.updateProfile());\n    });\n    i0.ɵɵtemplate(17, UserProfileComponent_div_4_app_loading_spinner_17_Template, 1, 2, \"app-loading-spinner\", 17);\n    i0.ɵɵtemplate(18, UserProfileComponent_div_4_span_18_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(19, \"section\", 7)(20, \"h2\");\n    i0.ɵɵtext(21, \"Change Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_div_4_Template_form_ngSubmit_22_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.changePassword());\n    });\n    i0.ɵɵelementStart(23, \"div\", 9)(24, \"label\", 19);\n    i0.ɵɵtext(25, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 20);\n    i0.ɵɵtemplate(27, UserProfileComponent_div_4_app_error_message_27_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 9)(29, \"label\", 21);\n    i0.ɵɵtext(30, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"input\", 22);\n    i0.ɵɵtemplate(32, UserProfileComponent_div_4_app_error_message_32_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 15)(34, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_div_4_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.changePassword());\n    });\n    i0.ɵɵtemplate(35, UserProfileComponent_div_4_app_loading_spinner_35_Template, 1, 2, \"app-loading-spinner\", 17);\n    i0.ɵɵtemplate(36, UserProfileComponent_div_4_span_36_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.profileForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"minlength\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"minlength\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"email\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"email\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.profileForm.invalid || ctx_r1.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.submitting);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.passwordForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"required\") || ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"minlength\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"required\") || ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"minlength\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx_r1.hasError(ctx_r1.passwordForm, \"confirmPassword\", \"required\") || ctx_r1.passwordForm.hasError(\"passwordMismatch\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.passwordForm, \"confirmPassword\", \"required\") || ctx_r1.passwordForm.hasError(\"passwordMismatch\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.passwordForm.invalid || ctx_r1.passwordSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.passwordSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.passwordSubmitting);\n  }\n}\nexport class UserProfileComponent {\n  constructor(fb, userService, notificationService) {\n    this.fb = fb;\n    this.userService = userService;\n    this.notificationService = notificationService;\n    this.user = null;\n    this.loading = false;\n    this.submitting = false;\n    this.passwordSubmitting = false;\n  }\n  ngOnInit() {\n    this.initForms();\n    this.loadUserProfile();\n  }\n  /**\n   * Initialize forms\n   */\n  initForms() {\n    // Profile form\n    this.profileForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    // Password form\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  /**\n   * Load user profile\n   */\n  loadUserProfile() {\n    this.loading = true;\n    this.userService.getUser(1) // Using a hardcoded ID for demo purposes\n    .subscribe({\n      next: user => {\n        this.user = user;\n        this.profileForm.patchValue({\n          name: user.name,\n          email: user.email\n        });\n        this.loading = false;\n      },\n      error: error => {\n        this.notificationService.showError('Failed to load user profile');\n        this.loading = false;\n      }\n    });\n  }\n  /**\n   * Update user profile\n   */\n  updateProfile() {\n    if (this.profileForm.invalid) {\n      this.profileForm.markAllAsTouched();\n      return;\n    }\n    this.submitting = true;\n    const updatedUser = {\n      ...this.user,\n      name: this.profileForm.value.name,\n      email: this.profileForm.value.email\n    };\n    this.userService.updateUser(updatedUser).subscribe({\n      next: () => {\n        this.notificationService.showSuccess('Profile updated successfully');\n        this.submitting = false;\n      },\n      error: error => {\n        this.notificationService.showError('Failed to update profile');\n        this.submitting = false;\n      }\n    });\n  }\n  /**\n   * Change password\n   */\n  changePassword() {\n    if (this.passwordForm.invalid) {\n      this.passwordForm.markAllAsTouched();\n      return;\n    }\n    this.passwordSubmitting = true;\n    this.userService.changePassword({\n      id: this.user.id,\n      password: this.passwordForm.value.password\n    }).subscribe({\n      next: () => {\n        this.notificationService.showSuccess('Password changed successfully');\n        this.passwordForm.reset();\n        this.passwordSubmitting = false;\n      },\n      error: error => {\n        this.notificationService.showError('Failed to change password');\n        this.passwordSubmitting = false;\n      }\n    });\n  }\n  /**\n   * Password match validator\n   */\n  passwordMatchValidator(group) {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    return password === confirmPassword ? null : {\n      passwordMismatch: true\n    };\n  }\n  /**\n   * Check if form control has error\n   */\n  hasError(form, controlName, errorName) {\n    const control = form.get(controlName);\n    return control !== null && control.touched && control.hasError(errorName);\n  }\n  /**\n   * Get error message for form control\n   */\n  getErrorMessage(form, controlName) {\n    const control = form.get(controlName);\n    if (!control || !control.errors || !control.touched) {\n      return '';\n    }\n    if (control.hasError('required')) {\n      return 'This field is required';\n    }\n    if (control.hasError('email')) {\n      return 'Please enter a valid email address';\n    }\n    if (control.hasError('minlength')) {\n      const minLength = control.errors['minlength'].requiredLength;\n      return `Minimum length is ${minLength} characters`;\n    }\n    if (controlName === 'confirmPassword' && form.hasError('passwordMismatch')) {\n      return 'Passwords do not match';\n    }\n    return 'Invalid input';\n  }\n  static {\n    this.ɵfac = function UserProfileComponent_Factory(t) {\n      return new (t || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.NotificationService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserProfileComponent,\n      selectors: [[\"app-user-profile\"]],\n      decls: 6,\n      vars: 2,\n      consts: [[1, \"user-profile-container\"], [1, \"profile-title\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"profile-content\", 4, \"ngIf\"], [1, \"loading-container\"], [3, \"size\"], [1, \"profile-content\"], [1, \"profile-section\"], [1, \"profile-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [3, \"message\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-actions\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [3, \"size\", \"color\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [3, \"message\"], [3, \"size\", \"color\"]],\n      template: function UserProfileComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"User Profile\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, UserProfileComponent_div_3_Template, 2, 1, \"div\", 2);\n          i0.ɵɵtemplate(4, UserProfileComponent_div_4_Template, 37, 24, \"div\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"app-notification-toast\");\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.ErrorMessageComponent, i6.LoadingSpinnerComponent, i7.NotificationToastComponent],\n      styles: [\".user-profile-container[_ngcontent-%COMP%] {\\n  max-width: 800px;\\n  margin: 0 auto;\\n  padding: 20px;\\n  font-family: \\\"Roboto\\\", Arial, sans-serif;\\n  color: #333;\\n}\\n\\n.profile-title[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  font-weight: 500;\\n  margin-bottom: 24px;\\n  color: #3f51b5;\\n}\\n\\n.loading-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: 200px;\\n}\\n\\n.profile-content[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 30px;\\n}\\n\\n.profile-section[_ngcontent-%COMP%] {\\n  background-color: #f9f9f9;\\n  border: 1px solid #eee;\\n  border-radius: 4px;\\n  padding: 20px;\\n}\\n.profile-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  font-size: 18px;\\n  font-weight: 500;\\n  margin-bottom: 20px;\\n  color: #3f51b5;\\n}\\n\\n.profile-form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n}\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  font-weight: 500;\\n}\\n\\n.form-control[_ngcontent-%COMP%] {\\n  padding: 10px 12px;\\n  border: 1px solid #ddd;\\n  border-radius: 4px;\\n  font-size: 14px;\\n  transition: border-color 0.2s ease;\\n}\\n.form-control[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #3f51b5;\\n  box-shadow: 0 0 0 2px rgba(63, 81, 181, 0.2);\\n}\\n.form-control.invalid[_ngcontent-%COMP%] {\\n  border-color: #f44336;\\n}\\n.form-control.invalid[_ngcontent-%COMP%]:focus {\\n  box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.2);\\n}\\n\\n.form-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-start;\\n  margin-top: 10px;\\n}\\n\\n.btn[_ngcontent-%COMP%] {\\n  padding: 10px 16px;\\n  border: none;\\n  border-radius: 4px;\\n  font-size: 14px;\\n  font-weight: 500;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  min-width: 120px;\\n  transition: background-color 0.2s ease;\\n}\\n.btn[_ngcontent-%COMP%]:disabled {\\n  background-color: #e0e0e0;\\n  color: #9e9e9e;\\n  cursor: not-allowed;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #3f51b5;\\n  color: white;\\n}\\n.btn-primary[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background-color: #32408f;\\n}\\n\\n.btn-secondary[_ngcontent-%COMP%] {\\n  background-color: #7986cb;\\n  color: white;\\n}\\n.btn-secondary[_ngcontent-%COMP%]:hover:not(:disabled) {\\n  background-color: #5465bd;\\n}\\n\\n@media (min-width: 768px) {\\n  .profile-content[_ngcontent-%COMP%] {\\n    flex-direction: row;\\n  }\\n  .profile-content[_ngcontent-%COMP%]   .profile-section[_ngcontent-%COMP%] {\\n    flex: 1;\\n  }\\n}\\n@media (max-width: 767px) {\\n  .user-profile-container[_ngcontent-%COMP%] {\\n    padding: 15px;\\n  }\\n  .profile-section[_ngcontent-%COMP%] {\\n    padding: 15px;\\n  }\\n  .btn[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmVhdHVyZXMvdXNlci1tYW5hZ2VtZW50L3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBYUE7RUFDRSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxhQUFBO0VBQ0Esd0NBQUE7RUFDQSxXQWRXO0FBRWI7O0FBZ0JBO0VBQ0UsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQXpCYztBQVloQjs7QUFpQkE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0FBZEY7O0FBa0JBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsU0FBQTtBQWZGOztBQW1CQTtFQUNFLHlCQXJDVztFQXNDWCxzQkFBQTtFQUNBLGtCQUFBO0VBQ0EsYUFBQTtBQWhCRjtBQWtCRTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0F0RFk7QUFzQ2hCOztBQXFCQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLFNBQUE7QUFsQkY7O0FBc0JBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsUUFBQTtBQW5CRjtBQXFCRTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtBQW5CSjs7QUF3QkE7RUFDRSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0NBQUE7QUFyQkY7QUF1QkU7RUFDRSxhQUFBO0VBQ0EscUJBbEZVO0VBbUZWLDRDQUFBO0FBckJKO0FBd0JFO0VBQ0UscUJBMUZVO0FBb0VkO0FBd0JJO0VBQ0UsNENBQUE7QUF0Qk47O0FBNEJBO0VBQ0UsYUFBQTtFQUNBLDJCQUFBO0VBQ0EsZ0JBQUE7QUF6QkY7O0FBNkJBO0VBQ0Usa0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtFQUNBLHNDQUFBO0FBMUJGO0FBNEJFO0VBQ0UseUJBcEhhO0VBcUhiLGNBcEhZO0VBcUhaLG1CQUFBO0FBMUJKOztBQThCQTtFQUNFLHlCQWpJYztFQWtJZCxZQUFBO0FBM0JGO0FBNkJFO0VBQ0UseUJBQUE7QUEzQko7O0FBK0JBO0VBQ0UseUJBeklnQjtFQTBJaEIsWUFBQTtBQTVCRjtBQThCRTtFQUNFLHlCQUFBO0FBNUJKOztBQWlDQTtFQUNFO0lBQ0UsbUJBQUE7RUE5QkY7RUFnQ0U7SUFDRSxPQUFBO0VBOUJKO0FBQ0Y7QUFrQ0E7RUFDRTtJQUNFLGFBQUE7RUFoQ0Y7RUFtQ0E7SUFDRSxhQUFBO0VBakNGO0VBb0NBO0lBQ0UsV0FBQTtFQWxDRjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVmFyaWFibGVzXG4kcHJpbWFyeS1jb2xvcjogIzNmNTFiNTtcbiRzZWNvbmRhcnktY29sb3I6ICM3OTg2Y2I7XG4kZXJyb3ItY29sb3I6ICNmNDQzMzY7XG4kdGV4dC1jb2xvcjogIzMzMztcbiRib3JkZXItY29sb3I6ICNkZGQ7XG4kZm9jdXMtY29sb3I6ICMzZjUxYjU7XG4kZGlzYWJsZWQtY29sb3I6ICNlMGUwZTA7XG4kZGlzYWJsZWQtdGV4dDogIzllOWU5ZTtcbiRzZWN0aW9uLWJnOiAjZjlmOWY5O1xuJHNlY3Rpb24tYm9yZGVyOiAjZWVlO1xuXG4vLyBDb250YWluZXJcbi51c2VyLXByb2ZpbGUtY29udGFpbmVyIHtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgQXJpYWwsIHNhbnMtc2VyaWY7XG4gIGNvbG9yOiAkdGV4dC1jb2xvcjtcbn1cblxuLy8gVGl0bGVcbi5wcm9maWxlLXRpdGxlIHtcbiAgZm9udC1zaXplOiAyNHB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xuICBjb2xvcjogJHByaW1hcnktY29sb3I7XG59XG5cbi8vIExvYWRpbmcgY29udGFpbmVyXG4ubG9hZGluZy1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWluLWhlaWdodDogMjAwcHg7XG59XG5cbi8vIFByb2ZpbGUgY29udGVudFxuLnByb2ZpbGUtY29udGVudCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMzBweDtcbn1cblxuLy8gUHJvZmlsZSBzZWN0aW9uXG4ucHJvZmlsZS1zZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJHNlY3Rpb24tYmc7XG4gIGJvcmRlcjogMXB4IHNvbGlkICRzZWN0aW9uLWJvcmRlcjtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBwYWRkaW5nOiAyMHB4O1xuICBcbiAgaDIge1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgICBmb250LXdlaWdodDogNTAwO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuICB9XG59XG5cbi8vIEZvcm1cbi5wcm9maWxlLWZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDIwcHg7XG59XG5cbi8vIEZvcm0gZ3JvdXBcbi5mb3JtLWdyb3VwIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiA4cHg7XG4gIFxuICBsYWJlbCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIH1cbn1cblxuLy8gRm9ybSBjb250cm9sXG4uZm9ybS1jb250cm9sIHtcbiAgcGFkZGluZzogMTBweCAxMnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyLWNvbG9yO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuMnMgZWFzZTtcbiAgXG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gICAgYm9yZGVyLWNvbG9yOiAkZm9jdXMtY29sb3I7XG4gICAgYm94LXNoYWRvdzogMCAwIDAgMnB4IHJnYmEoJGZvY3VzLWNvbG9yLCAwLjIpO1xuICB9XG4gIFxuICAmLmludmFsaWQge1xuICAgIGJvcmRlci1jb2xvcjogJGVycm9yLWNvbG9yO1xuICAgIFxuICAgICY6Zm9jdXMge1xuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMnB4IHJnYmEoJGVycm9yLWNvbG9yLCAwLjIpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBGb3JtIGFjdGlvbnNcbi5mb3JtLWFjdGlvbnMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi8vIEJ1dHRvbnNcbi5idG4ge1xuICBwYWRkaW5nOiAxMHB4IDE2cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBmb250LXNpemU6IDE0cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1pbi13aWR0aDogMTIwcHg7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlO1xuICBcbiAgJjpkaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGRpc2FibGVkLWNvbG9yO1xuICAgIGNvbG9yOiAkZGlzYWJsZWQtdGV4dDtcbiAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICB9XG59XG5cbi5idG4tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuICBjb2xvcjogd2hpdGU7XG4gIFxuICAmOmhvdmVyOm5vdCg6ZGlzYWJsZWQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHByaW1hcnktY29sb3IsIDEwJSk7XG4gIH1cbn1cblxuLmJ0bi1zZWNvbmRhcnkge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xuICBjb2xvcjogd2hpdGU7XG4gIFxuICAmOmhvdmVyOm5vdCg6ZGlzYWJsZWQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrZW4oJHNlY29uZGFyeS1jb2xvciwgMTAlKTtcbiAgfVxufVxuXG4vLyBSZXNwb25zaXZlIHN0eWxlc1xuQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gIC5wcm9maWxlLWNvbnRlbnQge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgXG4gICAgLnByb2ZpbGUtc2VjdGlvbiB7XG4gICAgICBmbGV4OiAxO1xuICAgIH1cbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgLnVzZXItcHJvZmlsZS1jb250YWluZXIge1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gIH1cbiAgXG4gIC5wcm9maWxlLXNlY3Rpb24ge1xuICAgIHBhZGRpbmc6IDE1cHg7XG4gIH1cbiAgXG4gIC5idG4ge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","UserProfileComponent","constructor","fb","userService","notificationService","ngOnInit","initForms","loadUserProfile","profileForm","group","name","required","minLength","email","passwordForm","password","confirmPassword","validators","passwordMatchValidator","loading","getUser","subscribe","next","user","patchValue","error","showError","updateProfile","invalid","markAllAsTouched","submitting","updatedUser","value","updateUser","showSuccess","changePassword","passwordSubmitting","id","reset","get","passwordMismatch","hasError","form","controlName","errorName","control","touched","getErrorMessage","errors","requiredLength","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/haythemhedfi/Desktop/TechLead/angular-user-management/src/app/features/user-management/user-profile/user-profile.component.ts","/Users/haythemhedfi/Desktop/TechLead/angular-user-management/src/app/features/user-management/user-profile/user-profile.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../../../core/services/user.service';\nimport { NotificationService } from '../../../core/services/notification.service';\nimport { User } from '../../../core/models/user.interface';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n  profileForm!: FormGroup;\n  passwordForm!: FormGroup;\n  user: User | null = null;\n  loading = false;\n  submitting = false;\n  passwordSubmitting = false;\n  \n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private notificationService: NotificationService\n  ) {}\n  \n  ngOnInit(): void {\n    this.initForms();\n    this.loadUserProfile();\n  }\n  \n  /**\n   * Initialize forms\n   */\n  private initForms(): void {\n    // Profile form\n    this.profileForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      email: ['', [Validators.required, Validators.email]]\n    });\n    \n    // Password form\n    this.passwordForm = this.fb.group({\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, { validators: this.passwordMatchValidator });\n  }\n  \n  /**\n   * Load user profile\n   */\n  private loadUserProfile(): void {\n    this.loading = true;\n    \n    this.userService.getUser(1) // Using a hardcoded ID for demo purposes\n      .subscribe({\n        next: (user) => {\n          this.user = user;\n          this.profileForm.patchValue({\n            name: user.name,\n            email: user.email\n          });\n          this.loading = false;\n        },\n        error: (error) => {\n          this.notificationService.showError('Failed to load user profile');\n          this.loading = false;\n        }\n      });\n  }\n  \n  /**\n   * Update user profile\n   */\n  updateProfile(): void {\n    if (this.profileForm.invalid) {\n      this.profileForm.markAllAsTouched();\n      return;\n    }\n    \n    this.submitting = true;\n    \n    const updatedUser: User = {\n      ...this.user!,\n      name: this.profileForm.value.name,\n      email: this.profileForm.value.email\n    };\n    \n    this.userService.updateUser(updatedUser)\n      .subscribe({\n        next: () => {\n          this.notificationService.showSuccess('Profile updated successfully');\n          this.submitting = false;\n        },\n        error: (error) => {\n          this.notificationService.showError('Failed to update profile');\n          this.submitting = false;\n        }\n      });\n  }\n  \n  /**\n   * Change password\n   */\n  changePassword(): void {\n    if (this.passwordForm.invalid) {\n      this.passwordForm.markAllAsTouched();\n      return;\n    }\n    \n    this.passwordSubmitting = true;\n    \n    this.userService.changePassword({\n      id: this.user!.id,\n      password: this.passwordForm.value.password\n    })\n      .subscribe({\n        next: () => {\n          this.notificationService.showSuccess('Password changed successfully');\n          this.passwordForm.reset();\n          this.passwordSubmitting = false;\n        },\n        error: (error) => {\n          this.notificationService.showError('Failed to change password');\n          this.passwordSubmitting = false;\n        }\n      });\n  }\n  \n  /**\n   * Password match validator\n   */\n  private passwordMatchValidator(group: FormGroup): { [key: string]: boolean } | null {\n    const password = group.get('password')?.value;\n    const confirmPassword = group.get('confirmPassword')?.value;\n    \n    return password === confirmPassword ? null : { passwordMismatch: true };\n  }\n  \n  /**\n   * Check if form control has error\n   */\n  hasError(form: FormGroup, controlName: string, errorName: string): boolean {\n    const control = form.get(controlName);\n    return control !== null && control.touched && control.hasError(errorName);\n  }\n  \n  /**\n   * Get error message for form control\n   */\n  getErrorMessage(form: FormGroup, controlName: string): string {\n    const control = form.get(controlName);\n    \n    if (!control || !control.errors || !control.touched) {\n      return '';\n    }\n    \n    if (control.hasError('required')) {\n      return 'This field is required';\n    }\n    \n    if (control.hasError('email')) {\n      return 'Please enter a valid email address';\n    }\n    \n    if (control.hasError('minlength')) {\n      const minLength = control.errors['minlength'].requiredLength;\n      return `Minimum length is ${minLength} characters`;\n    }\n    \n    if (controlName === 'confirmPassword' && form.hasError('passwordMismatch')) {\n      return 'Passwords do not match';\n    }\n    \n    return 'Invalid input';\n  }\n}","<div class=\"user-profile-container\">\n  <h1 class=\"profile-title\">User Profile</h1>\n  \n  <!-- Loading spinner -->\n  <div *ngIf=\"loading\" class=\"loading-container\">\n    <app-loading-spinner [size]=\"'medium'\"></app-loading-spinner>\n  </div>\n  \n  <div *ngIf=\"!loading\" class=\"profile-content\">\n    <!-- Profile Form -->\n    <section class=\"profile-section\">\n      <h2>Personal Information</h2>\n      \n      <form [formGroup]=\"profileForm\" (ngSubmit)=\"updateProfile()\" class=\"profile-form\">\n        <!-- Name Field -->\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input \n            type=\"text\" \n            id=\"name\" \n            formControlName=\"name\" \n            class=\"form-control\"\n            [ngClass]=\"{'invalid': hasError(profileForm, 'name', 'required') || hasError(profileForm, 'name', 'minlength')}\"\n          >\n          <app-error-message *ngIf=\"hasError(profileForm, 'name', 'required') || hasError(profileForm, 'name', 'minlength')\" \n            [message]=\"getErrorMessage(profileForm, 'name')\"></app-error-message>\n        </div>\n        \n        <!-- Email Field -->\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input \n            type=\"email\" \n            id=\"email\" \n            formControlName=\"email\" \n            class=\"form-control\"\n            [ngClass]=\"{'invalid': hasError(profileForm, 'email', 'required') || hasError(profileForm, 'email', 'email')}\"\n          >\n          <app-error-message *ngIf=\"hasError(profileForm, 'email', 'required') || hasError(profileForm, 'email', 'email')\" \n            [message]=\"getErrorMessage(profileForm, 'email')\"></app-error-message>\n        </div>\n        \n        <!-- Submit Button -->\n        <div class=\"form-actions\">\n          <button \n            type=\"submit\" \n            class=\"btn btn-primary\" \n            [disabled]=\"profileForm.invalid || submitting\"\n            (click)=\"updateProfile()\"\n          >\n            <app-loading-spinner *ngIf=\"submitting\" [size]=\"'small'\" [color]=\"'#ffffff'\"></app-loading-spinner>\n            <span *ngIf=\"!submitting\">Update Profile</span>\n          </button>\n        </div>\n      </form>\n    </section>\n    \n    <!-- Password Form -->\n    <section class=\"profile-section\">\n      <h2>Change Password</h2>\n      \n      <form [formGroup]=\"passwordForm\" (ngSubmit)=\"changePassword()\" class=\"profile-form\">\n        <!-- Password Field -->\n        <div class=\"form-group\">\n          <label for=\"password\">New Password</label>\n          <input \n            type=\"password\" \n            id=\"password\" \n            formControlName=\"password\" \n            class=\"form-control\"\n            [ngClass]=\"{'invalid': hasError(passwordForm, 'password', 'required') || hasError(passwordForm, 'password', 'minlength')}\"\n          >\n          <app-error-message *ngIf=\"hasError(passwordForm, 'password', 'required') || hasError(passwordForm, 'password', 'minlength')\" \n            [message]=\"getErrorMessage(passwordForm, 'password')\"></app-error-message>\n        </div>\n        \n        <!-- Confirm Password Field -->\n        <div class=\"form-group\">\n          <label for=\"confirmPassword\">Confirm Password</label>\n          <input \n            type=\"password\" \n            id=\"confirmPassword\" \n            formControlName=\"confirmPassword\" \n            class=\"form-control\"\n            [ngClass]=\"{'invalid': hasError(passwordForm, 'confirmPassword', 'required') || passwordForm.hasError('passwordMismatch')}\"\n          >\n          <app-error-message *ngIf=\"hasError(passwordForm, 'confirmPassword', 'required') || passwordForm.hasError('passwordMismatch')\" \n            [message]=\"getErrorMessage(passwordForm, 'confirmPassword')\"></app-error-message>\n        </div>\n        \n        <!-- Submit Button -->\n        <div class=\"form-actions\">\n          <button \n            type=\"submit\" \n            class=\"btn btn-secondary\" \n            [disabled]=\"passwordForm.invalid || passwordSubmitting\"\n            (click)=\"changePassword()\"\n          >\n            <app-loading-spinner *ngIf=\"passwordSubmitting\" [size]=\"'small'\" [color]=\"'#ffffff'\"></app-loading-spinner>\n            <span *ngIf=\"!passwordSubmitting\">Change Password</span>\n          </button>\n        </div>\n      </form>\n    </section>\n  </div>\n</div>\n\n<!-- Notification Toast -->\n<app-notification-toast></app-notification-toast>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}