{"ast":null,"code":"import { DatePipe } from '@angular/common';\nimport * as i0 from \"@angular/core\";\n/**\n * Pipe to format dates with a default format\n * Usage: {{ dateValue | formatDate }}\n * Usage with custom format: {{ dateValue | formatDate:'MM/dd/yyyy' }}\n */\nexport class FormatDatePipe {\n  constructor() {\n    this.datePipe = new DatePipe('en-US');\n  }\n  /**\n   * Transform a date to a formatted string\n   * @param value The date to format\n   * @param format The date format (default: 'MMM d, y')\n   * @returns The formatted date string\n   */\n  transform(value, format = 'MMM d, y') {\n    if (!value) {\n      return null;\n    }\n    return this.datePipe.transform(value, format);\n  }\n  static {\n    this.ɵfac = function FormatDatePipe_Factory(t) {\n      return new (t || FormatDatePipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n      name: \"formatDate\",\n      type: FormatDatePipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAASA,QAAQ,QAAQ,iBAAiB;;AAE1C;;;;;AAQA,OAAM,MAAOC,cAAc;EAH3BC;IAIU,aAAQ,GAAG,IAAIF,QAAQ,CAAC,OAAO,CAAC;;EAExC;;;;;;EAMAG,SAAS,CAACC,KAAU,EAAEC,SAAiB,UAAU;IAC/C,IAAI,CAACD,KAAK,EAAE;MACV,OAAO,IAAI;;IAGb,OAAO,IAAI,CAACE,QAAQ,CAACH,SAAS,CAACC,KAAK,EAAEC,MAAM,CAAC;EAC/C;;;uBAfWJ,cAAc;IAAA;EAAA;;;;YAAdA,cAAc;MAAAM;IAAA;EAAA","names":["DatePipe","FormatDatePipe","constructor","transform","value","format","datePipe","pure"],"sourceRoot":"","sources":["/Users/haythemhedfi/Desktop/TechLead/angular-user-management/src/app/shared/pipes/format-date.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n/**\n * Pipe to format dates with a default format\n * Usage: {{ dateValue | formatDate }}\n * Usage with custom format: {{ dateValue | formatDate:'MM/dd/yyyy' }}\n */\n@Pipe({\n  name: 'formatDate'\n})\nexport class FormatDatePipe implements PipeTransform {\n  private datePipe = new DatePipe('en-US');\n  \n  /**\n   * Transform a date to a formatted string\n   * @param value The date to format\n   * @param format The date format (default: 'MMM d, y')\n   * @returns The formatted date string\n   */\n  transform(value: any, format: string = 'MMM d, y'): string | null {\n    if (!value) {\n      return null;\n    }\n    \n    return this.datePipe.transform(value, format);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}