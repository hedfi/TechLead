{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserService } from './services/user.service';\nimport { NotificationService } from './services/notification.service';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport * as i0 from \"@angular/core\";\nexport class CoreModule {\n  // Prevent reimporting of the CoreModule\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error('CoreModule has already been loaded. Import CoreModule only in the AppModule.');\n    }\n  }\n  static {\n    this.ɵfac = function CoreModule_Factory(t) {\n      return new (t || CoreModule)(i0.ɵɵinject(CoreModule, 12));\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: CoreModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [UserService, NotificationService, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: AuthInterceptor,\n        multi: true\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ErrorInterceptor,\n        multi: true\n      }],\n      imports: [CommonModule, HttpClientModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(CoreModule, {\n    imports: [CommonModule, HttpClientModule]\n  });\n})();","map":{"version":3,"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAE1E,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,mBAAmB,QAAQ,iCAAiC;AACrE,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,gBAAgB,QAAQ,kCAAkC;;AAenE,OAAM,MAAOC,UAAU;EACrB;EACAC,YAAoCC,YAAwB;IAC1D,IAAIA,YAAY,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8EAA8E,CAAC;;EAEnG;;;uBANWH,UAAU;IAAA;EAAA;;;YAAVA;IAAU;EAAA;;;iBAPV,CACTJ,WAAW,EACXC,mBAAmB,EACnB;QAAEO,OAAO,EAAET,iBAAiB;QAAEU,QAAQ,EAAEP,eAAe;QAAEQ,KAAK,EAAE;MAAI,CAAE,EACtE;QAAEF,OAAO,EAAET,iBAAiB;QAAEU,QAAQ,EAAEN,gBAAgB;QAAEO,KAAK,EAAE;MAAI,CAAE,CACxE;MAAAC,UARCd,YAAY,EACZC,gBAAgB;IAAA;EAAA;;;2EASPM,UAAU;IAAAO,UAVnBd,YAAY,EACZC,gBAAgB;EAAA;AAAA","names":["CommonModule","HttpClientModule","HTTP_INTERCEPTORS","UserService","NotificationService","AuthInterceptor","ErrorInterceptor","CoreModule","constructor","parentModule","Error","provide","useClass","multi","imports"],"sourceRoot":"","sources":["/Users/haythemhedfi/Desktop/TechLead/angular-user-management/src/app/core/core.module.ts"],"sourcesContent":["import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { UserService } from './services/user.service';\nimport { NotificationService } from './services/notification.service';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  providers: [\n    UserService,\n    NotificationService,\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ]\n})\nexport class CoreModule {\n  // Prevent reimporting of the CoreModule\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule has already been loaded. Import CoreModule only in the AppModule.');\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}