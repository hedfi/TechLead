{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/user.service\";\nimport * as i3 from \"../../../core/services/notification.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../../shared/components/error-message/error-message.component\";\nimport * as i6 from \"../../../shared/components/loading-spinner/loading-spinner.component\";\nimport * as i7 from \"../../../shared/components/notification-toast/notification-toast.component\";\nfunction UserProfileComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelement(1, \"app-loading-spinner\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"size\", \"medium\");\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r2.getErrorMessage(ctx_r2.profileForm, \"name\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r3.getErrorMessage(ctx_r3.profileForm, \"email\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_loading_spinner_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-spinner\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"size\", \"small\")(\"color\", \"#ffffff\");\n  }\n}\nfunction UserProfileComponent_div_4_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Update Profile\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r6.getErrorMessage(ctx_r6.passwordForm, \"password\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_error_message_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-error-message\", 24);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"message\", ctx_r7.getErrorMessage(ctx_r7.passwordForm, \"confirmPassword\"));\n  }\n}\nfunction UserProfileComponent_div_4_app_loading_spinner_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-loading-spinner\", 25);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"size\", \"small\")(\"color\", \"#ffffff\");\n  }\n}\nfunction UserProfileComponent_div_4_span_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Change Password\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"invalid\": a0\n  };\n};\nfunction UserProfileComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"section\", 7)(2, \"h2\");\n    i0.ɵɵtext(3, \"Personal Information\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_div_4_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.updateProfile());\n    });\n    i0.ɵɵelementStart(5, \"div\", 9)(6, \"label\", 10);\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 11);\n    i0.ɵɵtemplate(9, UserProfileComponent_div_4_app_error_message_9_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\", 13);\n    i0.ɵɵtext(12, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 14);\n    i0.ɵɵtemplate(14, UserProfileComponent_div_4_app_error_message_14_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 15)(16, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_div_4_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.updateProfile());\n    });\n    i0.ɵɵtemplate(17, UserProfileComponent_div_4_app_loading_spinner_17_Template, 1, 2, \"app-loading-spinner\", 17);\n    i0.ɵɵtemplate(18, UserProfileComponent_div_4_span_18_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(19, \"section\", 7)(20, \"h2\");\n    i0.ɵɵtext(21, \"Change Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"form\", 8);\n    i0.ɵɵlistener(\"ngSubmit\", function UserProfileComponent_div_4_Template_form_ngSubmit_22_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.changePassword());\n    });\n    i0.ɵɵelementStart(23, \"div\", 9)(24, \"label\", 19);\n    i0.ɵɵtext(25, \"New Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"input\", 20);\n    i0.ɵɵtemplate(27, UserProfileComponent_div_4_app_error_message_27_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"div\", 9)(29, \"label\", 21);\n    i0.ɵɵtext(30, \"Confirm Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(31, \"input\", 22);\n    i0.ɵɵtemplate(32, UserProfileComponent_div_4_app_error_message_32_Template, 1, 1, \"app-error-message\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"div\", 15)(34, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_div_4_Template_button_click_34_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.changePassword());\n    });\n    i0.ɵɵtemplate(35, UserProfileComponent_div_4_app_loading_spinner_35_Template, 1, 2, \"app-loading-spinner\", 17);\n    i0.ɵɵtemplate(36, UserProfileComponent_div_4_span_36_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.profileForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"minlength\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"name\", \"minlength\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"email\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"required\") || ctx_r1.hasError(ctx_r1.profileForm, \"email\", \"email\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.profileForm.invalid || ctx_r1.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.submitting);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.passwordForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c0, ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"required\") || ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"minlength\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"required\") || ctx_r1.hasError(ctx_r1.passwordForm, \"password\", \"minlength\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c0, ctx_r1.hasError(ctx_r1.passwordForm, \"confirmPassword\", \"required\") || ctx_r1.passwordForm.hasError(\"passwordMismatch\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.hasError(ctx_r1.passwordForm, \"confirmPassword\", \"required\") || ctx_r1.passwordForm.hasError(\"passwordMismatch\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.passwordForm.invalid || ctx_r1.passwordSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.passwordSubmitting);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.passwordSubmitting);\n  }\n}\nexport let UserProfileComponent = /*#__PURE__*/(() => {\n  class UserProfileComponent {\n    constructor(fb, userService, notificationService) {\n      this.fb = fb;\n      this.userService = userService;\n      this.notificationService = notificationService;\n      this.user = null;\n      this.loading = false;\n      this.submitting = false;\n      this.passwordSubmitting = false;\n    }\n    ngOnInit() {\n      this.initForms();\n      this.loadUserProfile();\n    }\n    /**\n     * Initialize forms\n     */\n    initForms() {\n      // Profile form\n      this.profileForm = this.fb.group({\n        name: ['', [Validators.required, Validators.minLength(3)]],\n        email: ['', [Validators.required, Validators.email]]\n      });\n      // Password form\n      this.passwordForm = this.fb.group({\n        password: ['', [Validators.required, Validators.minLength(8)]],\n        confirmPassword: ['', Validators.required]\n      }, {\n        validators: this.passwordMatchValidator\n      });\n    }\n    /**\n     * Load user profile\n     */\n    loadUserProfile() {\n      this.loading = true;\n      this.userService.getUser(1) // Using a hardcoded ID for demo purposes\n      .subscribe({\n        next: user => {\n          this.user = user;\n          this.profileForm.patchValue({\n            name: user.name,\n            email: user.email\n          });\n          this.loading = false;\n        },\n        error: error => {\n          this.notificationService.showError('Failed to load user profile');\n          this.loading = false;\n        }\n      });\n    }\n    /**\n     * Update user profile\n     */\n    updateProfile() {\n      if (this.profileForm.invalid) {\n        this.profileForm.markAllAsTouched();\n        return;\n      }\n      this.submitting = true;\n      const updatedUser = {\n        ...this.user,\n        name: this.profileForm.value.name,\n        email: this.profileForm.value.email\n      };\n      this.userService.updateUser(updatedUser).subscribe({\n        next: () => {\n          this.notificationService.showSuccess('Profile updated successfully');\n          this.submitting = false;\n        },\n        error: error => {\n          this.notificationService.showError('Failed to update profile');\n          this.submitting = false;\n        }\n      });\n    }\n    /**\n     * Change password\n     */\n    changePassword() {\n      if (this.passwordForm.invalid) {\n        this.passwordForm.markAllAsTouched();\n        return;\n      }\n      this.passwordSubmitting = true;\n      this.userService.changePassword({\n        id: this.user.id,\n        password: this.passwordForm.value.password\n      }).subscribe({\n        next: () => {\n          this.notificationService.showSuccess('Password changed successfully');\n          this.passwordForm.reset();\n          this.passwordSubmitting = false;\n        },\n        error: error => {\n          this.notificationService.showError('Failed to change password');\n          this.passwordSubmitting = false;\n        }\n      });\n    }\n    /**\n     * Password match validator\n     */\n    passwordMatchValidator(group) {\n      const password = group.get('password')?.value;\n      const confirmPassword = group.get('confirmPassword')?.value;\n      return password === confirmPassword ? null : {\n        passwordMismatch: true\n      };\n    }\n    /**\n     * Check if form control has error\n     */\n    hasError(form, controlName, errorName) {\n      const control = form.get(controlName);\n      return control !== null && control.touched && control.hasError(errorName);\n    }\n    /**\n     * Get error message for form control\n     */\n    getErrorMessage(form, controlName) {\n      const control = form.get(controlName);\n      if (!control || !control.errors || !control.touched) {\n        return '';\n      }\n      if (control.hasError('required')) {\n        return 'This field is required';\n      }\n      if (control.hasError('email')) {\n        return 'Please enter a valid email address';\n      }\n      if (control.hasError('minlength')) {\n        const minLength = control.errors['minlength'].requiredLength;\n        return `Minimum length is ${minLength} characters`;\n      }\n      if (controlName === 'confirmPassword' && form.hasError('passwordMismatch')) {\n        return 'Passwords do not match';\n      }\n      return 'Invalid input';\n    }\n    static {\n      this.ɵfac = function UserProfileComponent_Factory(t) {\n        return new (t || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.NotificationService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserProfileComponent,\n        selectors: [[\"app-user-profile\"]],\n        decls: 6,\n        vars: 2,\n        consts: [[1, \"user-profile-container\"], [1, \"profile-title\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"profile-content\", 4, \"ngIf\"], [1, \"loading-container\"], [3, \"size\"], [1, \"profile-content\"], [1, \"profile-section\"], [1, \"profile-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [3, \"message\", 4, \"ngIf\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"ngClass\"], [1, \"form-actions\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [3, \"size\", \"color\", 4, \"ngIf\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"confirmPassword\"], [\"type\", \"password\", \"id\", \"confirmPassword\", \"formControlName\", \"confirmPassword\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [3, \"message\"], [3, \"size\", \"color\"]],\n        template: function UserProfileComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n            i0.ɵɵtext(2, \"User Profile\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(3, UserProfileComponent_div_3_Template, 2, 1, \"div\", 2);\n            i0.ɵɵtemplate(4, UserProfileComponent_div_4_Template, 37, 24, \"div\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(5, \"app-notification-toast\");\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.ErrorMessageComponent, i6.LoadingSpinnerComponent, i7.NotificationToastComponent],\n        styles: [\".user-profile-container[_ngcontent-%COMP%]{max-width:800px;margin:0 auto;padding:20px;font-family:Roboto,Arial,sans-serif;color:#333}.profile-title[_ngcontent-%COMP%]{font-size:24px;font-weight:500;margin-bottom:24px;color:#3f51b5}.loading-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:200px}.profile-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:30px}.profile-section[_ngcontent-%COMP%]{background-color:#f9f9f9;border:1px solid #eee;border-radius:4px;padding:20px}.profile-section[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:18px;font-weight:500;margin-bottom:20px;color:#3f51b5}.profile-form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px}.form-group[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:8px}.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:14px;font-weight:500}.form-control[_ngcontent-%COMP%]{padding:10px 12px;border:1px solid #ddd;border-radius:4px;font-size:14px;transition:border-color .2s ease}.form-control[_ngcontent-%COMP%]:focus{outline:none;border-color:#3f51b5;box-shadow:0 0 0 2px #3f51b533}.form-control.invalid[_ngcontent-%COMP%]{border-color:#f44336}.form-control.invalid[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 2px #f4433633}.form-actions[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;margin-top:10px}.btn[_ngcontent-%COMP%]{padding:10px 16px;border:none;border-radius:4px;font-size:14px;font-weight:500;cursor:pointer;display:flex;align-items:center;justify-content:center;min-width:120px;transition:background-color .2s ease}.btn[_ngcontent-%COMP%]:disabled{background-color:#e0e0e0;color:#9e9e9e;cursor:not-allowed}.btn-primary[_ngcontent-%COMP%]{background-color:#3f51b5;color:#fff}.btn-primary[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#32408f}.btn-secondary[_ngcontent-%COMP%]{background-color:#7986cb;color:#fff}.btn-secondary[_ngcontent-%COMP%]:hover:not(:disabled){background-color:#5465bd}@media (min-width: 768px){.profile-content[_ngcontent-%COMP%]{flex-direction:row}.profile-content[_ngcontent-%COMP%]   .profile-section[_ngcontent-%COMP%]{flex:1}}@media (max-width: 767px){.user-profile-container[_ngcontent-%COMP%], .profile-section[_ngcontent-%COMP%]{padding:15px}.btn[_ngcontent-%COMP%]{width:100%}}\"]\n      });\n    }\n  }\n  return UserProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}